@page "/ContactUs"
@inject LoggedUserState loggedUserState

<div class="background-container">
    <img src=@backgroundImagePath alt="@backgroundImagePath" class="background-image"/>
    <div class="card">
        <div class="container">
            <h1 style="@loggedUserState.H1StyleTagCSS">Contact GreenPaws Veterinary Care</h1>
            <div class="row">
                <div class="col">
                    <p style="@loggedUserState.PStyleTagCSS">Have questions or concerns? We're here to help! Get in touch with us using the following methods:</p>
                    <div class="contact-details">
                        <p style="@loggedUserState.PStyleTagCSS"><span class="contact-method">Phone:</span> (123) 456-7890</p>
                        <p style="@loggedUserState.PStyleTagCSS"><span class="contact-method">Email:</span> info@greenpawsvet.com</p>
                        <p style="@loggedUserState.PStyleTagCSS"><span class="contact-method">Address:</span> 123 Pet Street, Pawsborough</p>
                    </div>
                </div>
                <div class="col">
                    <p style="@loggedUserState.PStyleTagCSS">Feel free to reach out to us during our business hours:</p>
                    <p style="@loggedUserState.PStyleTagCSS">
                        Monday - Friday: 8:00 AM - 6:00 PM<br>
                        Saturday: 9:00 AM - 4:00 PM<br>
                        Sunday: Closed
                    </p>
                </div>
            </div>
            <div class="row">
                <p style="@loggedUserState.PStyleTagCSS">We value your feedback and are excited to assist you and your pets on their journey to a healthier lifestyle. Don't hesitate to contact us!</p>
            </div>
        </div>
    </div>
</div>


@code
{
    public string backgroundImagePath = "./Images/Background_Images/Dog_Background1.jpg";

    public event PropertyChangedEventHandler PropertyChanged;

    /// <summary>
    /// On initialized setup propertyChanged event and load the page data.
    /// </summary>
    protected override void OnInitialized()
    {
        loggedUserState.PropertyChanged += OnloggedUserStateChanged;

        // Subscribe to the PropertyChanged event of AppPreferences
        if (loggedUserState.LoggedUser != null && loggedUserState.LoggedUser.AppPreferences != null)
        {
            loggedUserState.LoggedUser.AppPreferences.PropertyChanged += OnAppPreferencesChanged;
        }
        backgroundImagePath = loggedUserState.GetBackgroundImage();
    }

    /// <summary>
    /// If the user logs in; update the data on this page.
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private void OnloggedUserStateChanged(object sender, PropertyChangedEventArgs e)
    {
        // Check if the property that changed is "LoggedUser"
        if (e.PropertyName == nameof(loggedUserState.LoggedUser))
        {
            loggedUserState.LoggedUser.AppPreferences.PropertyChanged += OnAppPreferencesChanged;
            backgroundImagePath = loggedUserState.GetBackgroundImage();
            StateHasChanged();
        }
    }

    // Handle changes to the AppPreferences or its sub-properties
    private void OnAppPreferencesChanged(object sender, PropertyChangedEventArgs e)
    {
        // Check if the property that changed is one of the AppPreferences properties
        // that you want to monitor
        if (e.PropertyName == nameof(loggedUserState.LoggedUser) ||
            e.PropertyName == nameof(loggedUserState.LoggedUser.AppPreferences.SelectedFont) ||
            e.PropertyName == nameof(loggedUserState.LoggedUser.AppPreferences.SelectedFontSize) ||
            e.PropertyName == nameof(loggedUserState.LoggedUser.AppPreferences.WebpageAnimalPreference))
        {
            backgroundImagePath = loggedUserState.GetBackgroundImage();
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        // Unsubscribe from the PropertyChanged event of AppPreferences
        if (loggedUserState.LoggedUser != null && loggedUserState.LoggedUser.AppPreferences != null)
        {
            loggedUserState.LoggedUser.AppPreferences.PropertyChanged -= OnAppPreferencesChanged;
        }
    }
}
