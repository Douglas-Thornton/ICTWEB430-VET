@page "/OurServices"
@inject LoggedUserState loggedUserState

<div class="background-container">
    <img src=@backgroundImagePath alt="@backgroundImagePath" class="background-image"/>
    <div class="card">
        <div class="container">
            <h1>Our Services</h1>
            <div class="service">
                <h2>Specialized Canine Care</h2>
                <p>Our expertise lies in providing tailored care for dogs of all breeds. Whether it's routine checkups, vaccinations, or specialized treatments, we ensure your canine companions receive the highest quality care.</p>
            </div>
            <div class="service">
                <h2>Suburban Pet Care</h2>
                <p>While our specialization is dogs, we also extend our services to other suburban pets, including cats, rabbits, and more. Our compassionate approach ensures all pets receive the attention they deserve.</p>
            </div>
            <div class="service">
                <h2>Farm Class Animals</h2>
                <p>For farm class animals, we offer responsive and effective veterinary services. Though our primary focus is on suburban pets, we're here to provide care to farm animals as required, ensuring their well-being.</p>
            </div>
            <div class="service">
                <h2>Comprehensive Consultations</h2>
                <p>Our veterinary consultations go beyond physical health. We address behavioral concerns, offer dietary recommendations, and provide holistic guidance to ensure your pets lead happy, healthy lives.</p>
            </div>
        </div>
    </div>
</div>

@code 
{
    public event PropertyChangedEventHandler PropertyChanged;
    public string backgroundImagePath = "./Images/Background_Images/Dog_Background1.jpg";

    /// <summary>
    /// On initialized setup propertyChanged event and load the page data.
    /// </summary>
    protected override void OnInitialized()
    {
        loggedUserState.PropertyChanged += OnloggedUserStateChanged;

        // Subscribe to the PropertyChanged event of AppPreferences
        if (loggedUserState.LoggedUser != null && loggedUserState.LoggedUser.AppPreferences != null)
        {
            loggedUserState.LoggedUser.AppPreferences.PropertyChanged += OnAppPreferencesChanged;
        }
        backgroundImagePath = loggedUserState.GetBackgroundImage();
    }

    /// <summary>
    /// If the user logs in; update the data on this page.
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private void OnloggedUserStateChanged(object sender, PropertyChangedEventArgs e)
    {
        // Check if the property that changed is "LoggedUser"
        if (e.PropertyName == nameof(loggedUserState.LoggedUser))
        {
            loggedUserState.LoggedUser.AppPreferences.PropertyChanged += OnAppPreferencesChanged;
            backgroundImagePath = loggedUserState.GetBackgroundImage();
            StateHasChanged();
        }
    }

    // Handle changes to the AppPreferences or its sub-properties
    private void OnAppPreferencesChanged(object sender, PropertyChangedEventArgs e)
    {
        // Check if the property that changed is one of the AppPreferences properties
        // that you want to monitor
        if (e.PropertyName == nameof(loggedUserState.LoggedUser) ||
            e.PropertyName == nameof(loggedUserState.LoggedUser.AppPreferences.SelectedFont) ||
            e.PropertyName == nameof(loggedUserState.LoggedUser.AppPreferences.SelectedFontSize) ||
            e.PropertyName == nameof(loggedUserState.LoggedUser.AppPreferences.WebpageAnimalPreference))
        {
            backgroundImagePath = loggedUserState.GetBackgroundImage();
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        // Unsubscribe from the PropertyChanged event of AppPreferences
        if (loggedUserState.LoggedUser != null && loggedUserState.LoggedUser.AppPreferences != null)
        {
            loggedUserState.LoggedUser.AppPreferences.PropertyChanged -= OnAppPreferencesChanged;
        }
    }
}