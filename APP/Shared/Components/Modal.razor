<div class="modal fade show" tabindex="-1">
    <div class="modal-dialog  @ModalWidth">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@ModalTitle</h5>
                <button type="button" class="btn-close" @onclick="() => CloseModal(false)" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>@ModalBody</p>
                @ChildContent
            </div>
            @if (FooterRequired)
            {
                <div class="modal-footer">
                    <button type="button" @onclick="() => CloseModal(false)" class="btn btn-danger">Cancel</button>
                    <button type="button" @onclick="() => CloseModal(true)" class="btn btn-primary">Save</button>
                </div>
            }
        </div>
    </div>
</div>


@code
{
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public string ModalTitle { get; set; }
    [Parameter] public string ModalBody { get; set; }
    [Parameter] public bool FooterRequired { get; set; }
    [Parameter] public string ModalWidth { get; set; } = "modal-xl";
    /// <summary>
    /// Event on close of modal. Returns true if confirmed, or false if closed or canceled.
    /// </summary>
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    /// <summary>
    /// Closes the modal
    /// </summary>
    /// <param name="confirmed"> was the modal confirmed on cancelled </param>
    /// <returns>Boolean</returns>
    private Task CloseModal(bool confirmed)
    {
        return OnClose.InvokeAsync(confirmed);
    }
}